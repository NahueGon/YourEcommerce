@model YourEcommerce.ViewModels.MegaMenuViewModel

@foreach (var category in Model.Categories)
{
    <div id="mega-menu-full-cta-dropdown-@category.Id" class="z-100 absolute w-full hidden bg-white shadow-xs dark:bg-gray-900 animate__animated animate__fadeIn animate__faster">
        <div class="flex justify-center gap-15 max-w-screen-xl px-4 pb-5 mx-auto text-sm text-gray-500 dark:text-gray-400">
            @foreach (var productType in category.ProductTypes)
            {
                <ul class="space-y-4 w-30" aria-labelledby="mega-menu-full-cta-button">
                    <button class="cursor-pointer mb-4 py-2 px-3 text-base font-medium text-gray-900 border-b border-gray-100 md:w-auto hover:bg-gray-50 md:hover:bg-transparent md:border-0 md:p-0 dark:text-white dark:hover:bg-gray-700 md:dark:hover:bg-transparent dark:border-gray-700 tracking-wide">
                        @productType.Name
                    </button>
                    @foreach (var subcategory in productType.Subcategories)
                    {
                        <li>
                            <a href="#" class="font-medium hover:text-black dark:hover:text-white">
                                @subcategory.Name
                            </a>
                        </li>
                    }
                </ul>
            }
        </div>
    </div>
}

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const categories = [@string.Join(", ", Model.Categories.Select(c => c.Id))];

        categories.forEach(id => {
            const button = document.getElementById(`mega-menu-full-cta-dropdown-button-${id}`);
            const menu = document.getElementById(`mega-menu-full-cta-dropdown-${id}`);

            let timeout;

            const showMenu = () => {
                clearTimeout(timeout);
                menu.classList.remove('hidden');
            };

            const hideMenu = () => {
                timeout = setTimeout(() => {
                    menu.classList.add('hidden');
                }, 150);
            };

            if (button && menu) {
                button.addEventListener('mouseenter', showMenu);
                button.addEventListener('mouseleave', hideMenu);
                menu.addEventListener('mouseenter', showMenu);
                menu.addEventListener('mouseleave', hideMenu);
            }
        });
    });
</script>