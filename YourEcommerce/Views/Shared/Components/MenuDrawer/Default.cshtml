@using YourEcommerce.ViewModels
@model YourEcommerce.ViewModels.MenuDrawerViewModel

@functions {
    public string GetGenderName(Gender gender)
    {
        return gender switch
        {
            Gender.Unisex => "Unisex",
            Gender.Male => "Hombres",
            Gender.Female => "Mujeres",
            Gender.Kids => "Niños",
            _ => "Desconocido"
        };
    }
}

<div id="drawer-backdrop" class="flex flex-col fixed top-0 left-0 z-40 h-screen p-4 overflow-y-auto transition-transform -translate-x-full bg-white w-64 dark:bg-gray-800" tabindex="-1" aria-labelledby="drawer-backdrop-label">
    <h5 id="drawer-backdrop-label" class="text-base font-semibold text-gray-500 uppercase dark:text-gray-400">Menu</h5>
    <button type="button" data-drawer-hide="drawer-backdrop" aria-controls="drawer-backdrop" class="cursor-pointer text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 absolute top-2.5 end-2.5 inline-flex items-center justify-center dark:hover:bg-gray-600 dark:hover:text-white" >
      <span class="sr-only">Close menu</span>
      <i data-lucide="x" class="size-7"></i>
   </button>
  <div class="py-4 overflow-y-auto">
      <ul class="space-y-4">
            @foreach (var genderGroup in Model.MenuStructure.OrderBy(g => g.Key))
            {
                var gender = genderGroup.Key;
                var categories = genderGroup.Value;
                <div>
                    <button id="btn-gender-@((int)gender)" type="button" class="cursor-pointer w-full flex gap-2 items-center text-left text-gray-500 font-semibold py-2 px-3 text-lg" onclick="toggleGender(@((int)gender))">
                        @GetGenderName(gender)
                        <i id="icon-gender-@((int)gender)" data-lucide="chevron-down" class="size-5 transition-transform"></i>
                    </button>
                    <div id="gender-@((int)gender)" class="hidden pl-4 space-y-2 mb-6">
                        @foreach (var category in categories)
                        {
                            var categoryName = category.Key;
                            var categorySafe = categoryName.Replace(" ", "-").ToLowerInvariant();
                            var tags = category.Value;
                            <div>
                                <button id="btn-category-@((int)gender)-@categorySafe" type="button" class="cursor-pointer w-full flex gap-2 items-center text-left dark:text-gray-500 font-medium py-1 px-2 text-base" onclick="toggleCategory(@((int)gender), '@categorySafe')">
                                    @categoryName
                                    <i id="icon-category-@((int)gender)-@categorySafe" data-lucide="chevron-down" class="size-5 transition-transform"></i>
                                </button>
                                <ul id="product-category-@((int)gender)-@categorySafe" class="hidden pl-5 font-medium mb-6">
                                    @foreach (var tagName in tags)
                                    {
                                        <li>
                                            <a href="#" class="block py-2 text-gray-500 hover:text-black dark:hover:text-white">@tagName</a>
                                        </li>
                                    }
                                </ul>
                            </div>
                        }
                    </div>
                </div>
            }
      </ul>
   </div>
    <div class="flex justify-between mt-auto">
        <a asp-controller="Auth" asp-action="Login" class="text-gray-900 hover:text-white border border-gray-800 hover:bg-gray-900 focus:ring-4 focus:outline-none focus:ring-gray-300 font-medium rounded-lg px-3 py-2 text-sm text-center dark:border-gray-600 dark:text-gray-400 dark:hover:text-white dark:hover:bg-gray-600 dark:focus:ring-gray-800 mb-auto">
                Iniciar sesión
            </a>
        <a asp-controller="Auth" asp-action="Register" class="text-blue-700 hover:text-white border border-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg px-3 py-2 text-sm text-center dark:border-blue-500 dark:text-blue-500 dark:hover:text-white dark:hover:bg-blue-500 dark:focus:ring-blue-800">
            Regístrate
        </a>
    </div>
</div>

<script>
    function toggleGender(id) {
        const content = document.getElementById(`gender-${id}`);
        const icon = document.getElementById(`icon-gender-${id}`);
        const button = document.getElementById(`btn-gender-${id}`);
        const isHidden = content.classList.contains('hidden');

        document.querySelectorAll('[id^="gender-"]').forEach(el => el.classList.add('hidden'));
        document.querySelectorAll('[id^="icon-gender-"]').forEach(i => i.setAttribute('data-lucide', 'chevron-down'));
        document.querySelectorAll('[id^="btn-gender-"]').forEach(b => {
            b.classList.remove('dark:text-white');
            b.classList.remove('text-black');
            b.classList.add('text-gray-500');
        });

        if (isHidden) {
            content.classList.remove('hidden');
            icon.setAttribute('data-lucide', 'chevron-up');
            button.classList.remove('text-gray-500');
            button.classList.add('dark:text-white');
            button.classList.add('text-black');
        }

        lucide.createIcons();
    }

    function toggleCategory(id, categoryName) {
        const content = document.getElementById(`product-category-${id}-${categoryName}`);
        const icon = document.getElementById(`icon-category-${id}-${categoryName}`);
        const button = document.getElementById(`btn-category-${id}-${categoryName}`);
        const isHidden = content.classList.contains('hidden');

        document.querySelectorAll('[id^="product-category-"]').forEach(el => el.classList.add('hidden'));
        document.querySelectorAll('[id^="icon-category-"]').forEach(i => i.setAttribute('data-lucide', 'chevron-down'));
        document.querySelectorAll('[id^="btn-category-"]').forEach(b => {
            b.classList.remove('dark:text-white');
            b.classList.remove('text-black');
            b.classList.add('text-gray-500');
        });

        if (isHidden) {
            content.classList.remove('hidden');
            icon.setAttribute('data-lucide', 'chevron-up');
            button.classList.remove('text-gray-500');
            button.classList.add('dark:text-white');
            button.classList.add('text-black');
        }

        lucide.createIcons();
    }
</script>